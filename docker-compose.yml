#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
x-superset-image: &superset-image apache/superset:latest-dev
x-superset-depends-on: &superset-depends-on
  - db
  - redis
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./superset/docker:/app/docker
  - superset_home:/app/superset_home

x-airflow-volumes: &airflow-volumes
  - ./airflow/airflow_scheduler_data:/bitnami/airflow_scheduler_data
  - ./airflow/airflow_worker_data:/bitnami/airflow_worker_data
  - ./airflow/airflow_data:/bitnami/airflow_data

version: "3.7"
services:

  airflow-scheduler:
    # TODO: to be reverted to use proper registry/distro on T39132
    # image: docker.io/bitnami/airflow-scheduler:2
    image: docker.io/bitnami/airflow-scheduler:2
    environment:
      - AIRFLOW_DATABASE_NAME=airflow
      - AIRFLOW_DATABASE_USERNAME=dbuser
      - AIRFLOW_DATABASE_PASSWORD=dbpa55w0rd
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_WEBSERVER_HOST=airflow
      - AIRFLOW_DATABASE_HOST=db
    volumes:
      - airflow_scheduler_data:/bitnami

  airflow-worker:
    # TODO: to be reverted to use proper registry/distro on T39132
    # image: docker.io/bitnami/airflow-worker:2
    image: docker.io/bitnami/airflow-worker:2
    environment:
      - AIRFLOW_DATABASE_NAME=airflow
      - AIRFLOW_DATABASE_USERNAME=dbuser
      - AIRFLOW_DATABASE_PASSWORD=dbpa55w0rd
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_WEBSERVER_HOST=airflow
      - AIRFLOW_DATABASE_HOST=db
    volumes:
      - airflow_worker_data:/bitnami

  airflow:
    image: docker.io/bitnami/airflow:2
    environment:
      - AIRFLOW_DATABASE_NAME=airflow
      - AIRFLOW_DATABASE_USERNAME=dbuser
      - AIRFLOW_DATABASE_PASSWORD=dbpa55w0rd
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_DATABASE_HOST=db
      - AIRFLOW_USERNAME=admin
      - AIRFLOW_PASSWORD=pa55w0rd
      - AIRFLOW_LOAD_EXAMPLES=no
    ports:
      - '8080:8080'
    volumes:
      - airflow_data:/bitnami

    
  redis:
    image: redis:latest
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data

  db:
    env_file: superset/docker/.env-non-dev
    image: postgres:10
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - db_home:/var/lib/postgresql/data
      - ./db/initdb:/docker-entrypoint-initdb.d

  superset:
    env_file: superset/docker/.env-non-dev
    image: *superset-image
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes

  superset-init:
    image: *superset-image
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file: superset/docker/.env-non-dev
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker:
    image: *superset-image
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: superset/docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes

  superset-worker-beat:
    image: *superset-image
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: superset/docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes


volumes:
  superset_home:
    external: false
  db_home:
    external: false
  redis:
    external: false
  airflow_scheduler_data:
    driver: local
  airflow_worker_data:
    driver: local
  airflow_data:
    driver: local